"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 1.9.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import logging.config
import os
import sys

from django.utils.six.moves import configparser

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
APP_ROOT = os.path.abspath(os.path.join(BASE_DIR, '..'))
PROJ_ROOT = os.path.abspath(os.path.join(APP_ROOT, '..'))

CONF_DIR = os.path.join(APP_ROOT, 'conf')
RUN_DIR = os.path.join(APP_ROOT, 'sbin')
LOG_DIR = os.path.join(APP_ROOT, 'logs')
STATIC_ROOT = os.path.join(APP_ROOT, 'static')
CONF_FILE = os.path.join(CONF_DIR, 'config.ini')

if os.path.isfile(CONF_FILE):
    config = configparser.SafeConfigParser(allow_no_value=True)
    config.read(CONF_FILE)
else:
    sys.exit('Error!, [config.ini] file not found.\n ==> {}'.format(CONF_FILE))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

DEBUG = config.get('general', 'DEBUG')
SECRET_KEY = config.get('security', 'SECRET_KEY')

ALLOWED_HOSTS = config.get('general', 'ALLOWED_HOSTS')
AUTH_USER_MODEL = 'auth.User'

# logging
os.environ["API_LOG_FILE"] = os.path.join(LOG_DIR,
                                          config.get('general', 'LOG_PATH'))
LOG_CONF = os.path.join(CONF_DIR, 'logging.ini')
logging.config.fileConfig(LOG_CONF)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_docs',
    'corsheaders',  # Cross origin support
    'djoser',
    'task_tracker',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # cross origin
]

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': (
            os.path.join(BASE_DIR, 'templates'),
        ),
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases


DATABASES = {
    'default': {
        'NAME': config.get('databases', 'NAME'),
        'ENGINE': config.get('databases', 'ENGINE'),
        'USER': config.get('databases', 'USER'),
        'PASSWORD': config.get('databases', 'PASSWORD'),
        'HOST': config.get('databases', 'host'),
        'PORT': config.get('databases', 'port'),
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_URL = config.get('general', 'STATIC_URL')
STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # for username password requests
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication'
    ),
    'DEFAULT_FILTER_BACKENDS': ('rest_framework.filters.DjangoFilterBackend',),
    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning',

    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    'PAGE_SIZE': 10
}

# To enable cross origin support in Angular
CORS_ORIGIN_ALLOW_ALL = True

